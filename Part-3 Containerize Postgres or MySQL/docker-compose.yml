version: "3.8"
services:
    app:
        build: .
        volumes:
            - .:/myproject
        ports:
            - 8000:8000
        image: app:myproject
        container_name: myproject_container
        command: python manage.py runserver 0.0.0.0:8000
        depends_on:
            - db
    db:
        image: postgres:latest
        container_name: postgres_db
        volumes:
          - ./data/db:/var/lib/postgresql/data
        environment:
          - POSTGRES_DB=postgres
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
        networks:
            - pg-network

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin_container
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com
            PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - 5050:80
        depends_on:
            - db
        networks:
            - pg-network

    
    # postgres:
    #     image: postgres:latest
    #     container_name: example-database
    #     environment:
    #     POSTGRES_DB: postgres
    #     POSTGRES_USER: postgres
    #     POSTGRES_PASSWORD: postgres
    #     ports:
    #     - "5432:5432"
    #     networks:
    #     - pg-network
    #     volumes:
    #     - pg-data:/var/lib/postgresql/data

    # pgadmin:
    #     image: dpage/pgadmin4:latest
    #     container_name: pg-admin
    #     environment:
    #     PGADMIN_DEFAULT_EMAIL: admin@example.com
    #     PGADMIN_DEFAULT_PASSWORD: admin_password
    #     ports:
    #     - "5050:80"
    #     networks:
    #     - pg-network

    # db:
    #     image: mysql:5.7
    #     environment:
    #     MYSQL_DATABASE: 'django-app-db'
    #     MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    #     volumes:
    #     - ./data/mysql/db:/var/lib/mysql

